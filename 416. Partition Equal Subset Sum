class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int sum = 0, n = nums.size(), mx = 0;
        for(auto x: nums)
            sum += x, mx = max(mx, x);
        
        if(sum%2 != 0 || n < 2 || mx > sum/2)
            return false;
        sum /= 2;
        vector<int> dp(sum+1, 0);
        dp[0] = 1;
        
        for(int i = 0; i < n; i++){
            for(int j = sum; j >= 0; j--){
                if(dp[j] && nums[i]+j <= sum ){
                    dp[nums[i] + j] = 1;
                }
            }
            //for(int j = 0; j <= sum; j++){cout << dp[j] << " "; }cout << endl;
        }
        return dp[sum];
    }
};
