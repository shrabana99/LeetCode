class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        // ordered vs unordered map
        /*
        ordered map is implemented in a tree like structure , 
        one can iterate thorugh alphabetically, 
        takes longer time to insert and find
        
        unordered is implemented using hash table, 
        constant time to find and insert but
        elements are not in order
        */
        
        unordered_map<int, int> mp;
        for(int i = 0; i < nums.size(); i++){
            int key = target - nums[i];
            if(mp.find(key) != mp.end()){
                return {mp[key], i};
            }
            else mp[nums[i]] = i;
        }
        return {};
    }
};
